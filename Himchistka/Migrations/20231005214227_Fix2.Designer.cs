// <auto-generated />
using System;
using Himchistka.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Himchistka.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231005214227_Fix2")]
    partial class Fix2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Himchistka.Models.DataBase.Client", b =>
                {
                    b.Property<int>("PhysicalPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Adress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.HasKey("PhysicalPersonId");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Employee", b =>
                {
                    b.Property<int>("PhysicalPersonId")
                        .HasColumnType("int");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PhysicalPersonId");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AcceptanceDate")
                        .HasColumnType("datetime");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<bool>("Delivery")
                        .HasColumnType("bit");

                    b.Property<int?>("Discount")
                        .HasColumnType("int");

                    b.Property<decimal>("FinalPrice")
                        .HasColumnType("money");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ReadyDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ReceptionPoint")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.PhysicalPerson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("Sex")
                        .HasColumnType("bit");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("PhysicalPersons", (string)null);
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DeclaredValue")
                        .HasColumnType("money");

                    b.Property<string>("Defects")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("DirtStains")
                        .HasColumnType("bit");

                    b.Property<string>("FabricType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Size")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Service", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("ProcessingType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ResourcesExpention")
                        .HasColumnType("int");

                    b.Property<string>("ServiceDescription")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<decimal>("ServicePrice")
                        .HasColumnType("money");

                    b.Property<int>("ServiceTimeSpent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Services", (string)null);
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Client", b =>
                {
                    b.HasOne("Himchistka.Models.DataBase.PhysicalPerson", "PhysicalPerson")
                        .WithOne("Client")
                        .HasForeignKey("Himchistka.Models.DataBase.Client", "PhysicalPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Client_PhysicalPerson");

                    b.Navigation("PhysicalPerson");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Employee", b =>
                {
                    b.HasOne("Himchistka.Models.DataBase.PhysicalPerson", "PhysicalPerson")
                        .WithOne("Employee")
                        .HasForeignKey("Himchistka.Models.DataBase.Employee", "PhysicalPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Employee_PhysicalPerson");

                    b.Navigation("PhysicalPerson");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Order", b =>
                {
                    b.HasOne("Himchistka.Models.DataBase.Client", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK_Client_Orders");

                    b.HasOne("Himchistka.Models.DataBase.Service", "Service")
                        .WithMany("Orders")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Service");

                    b.Navigation("Client");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Product", b =>
                {
                    b.HasOne("Himchistka.Models.DataBase.Order", "Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_Order_Products");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Service", b =>
                {
                    b.HasOne("Himchistka.Models.DataBase.Employee", "Employee")
                        .WithMany("Services")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_Employee_Services");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Client", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Employee", b =>
                {
                    b.Navigation("Services");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Order", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.PhysicalPerson", b =>
                {
                    b.Navigation("Client")
                        .IsRequired();

                    b.Navigation("Employee")
                        .IsRequired();
                });

            modelBuilder.Entity("Himchistka.Models.DataBase.Service", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
